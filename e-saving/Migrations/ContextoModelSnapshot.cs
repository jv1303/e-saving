// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using e_saving.Models;

#nullable disable

namespace e_saving.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("e_saving.Models.Cliente", b =>
                {
                    b.Property<string>("CpfCliente")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailCliente")
                        .IsRequired()
                        .HasMaxLength(130)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("FotoPerfilCliente")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<int>("ItensDescartados")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("PontoFavoritoCliente")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<int>("PontosClientes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SenhaCliente")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("CpfCliente");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("e_saving.Models.Compra", b =>
                {
                    b.Property<int>("IdEstoque")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CpnjComprador")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.HasKey("IdEstoque", "CpnjComprador");

                    b.HasIndex("CpnjComprador");

                    b.ToTable("compra");
                });

            modelBuilder.Entity("e_saving.Models.Comprador", b =>
                {
                    b.Property<string>("CnpjComprador")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailComprador")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("FotoDePerfilComprador")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("SenhaComprador")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("CnpjComprador");

                    b.ToTable("compradores");
                });

            modelBuilder.Entity("e_saving.Models.ContaBanco", b =>
                {
                    b.Property<string>("Agencia")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Banco")
                        .HasMaxLength(75)
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroConta")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Bandeira")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("CnpjComprador")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("CpfCliente")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("CpfParceiro")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.HasKey("Agencia", "Banco", "NumeroConta");

                    b.HasIndex("CnpjComprador");

                    b.HasIndex("CpfCliente");

                    b.HasIndex("CpfParceiro");

                    b.ToTable("contasBanco");
                });

            modelBuilder.Entity("e_saving.Models.Estoque", b =>
                {
                    b.Property<int>("IdEstoque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdEstoque");

                    b.ToTable("estoques");
                });

            modelBuilder.Entity("e_saving.Models.Fornece", b =>
                {
                    b.Property<int>("IdItem")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CpfCliente")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<int?>("PontoColetaIdPontoColeta")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdItem", "CpfCliente");

                    b.HasIndex("CpfCliente");

                    b.HasIndex("PontoColetaIdPontoColeta");

                    b.ToTable("fornece");
                });

            modelBuilder.Entity("e_saving.Models.Funcionario", b =>
                {
                    b.Property<string>("CpfFuncionario")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailConstitucional")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("FotoPerfilFuncionario")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<int>("IdEstoque")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeFuncionario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("SenhaFuncionario")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("CpfFuncionario");

                    b.HasIndex("IdEstoque");

                    b.ToTable("funcionarios");
                });

            modelBuilder.Entity("e_saving.Models.Item", b =>
                {
                    b.Property<int>("IdItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdEstoque")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdPontoColeta")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModeloItem")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<double>("Valor")
                        .HasColumnType("REAL");

                    b.HasKey("IdItem");

                    b.HasIndex("IdEstoque");

                    b.HasIndex("IdPontoColeta");

                    b.ToTable("items");
                });

            modelBuilder.Entity("e_saving.Models.Parceiro", b =>
                {
                    b.Property<string>("CpfParceiro")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailParceiro")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("FotoPerfilParceiro")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("NomeParceiro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("PontosParceiro")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SenhaParceiro")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("CpfParceiro");

                    b.ToTable("parceiros");
                });

            modelBuilder.Entity("e_saving.Models.PontoColeta", b =>
                {
                    b.Property<int>("IdPontoColeta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CnpjParceiro")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("CpfParceiro")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<int>("ItensColetados")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Pontuacao")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPontoColeta");

                    b.HasIndex("CpfParceiro");

                    b.ToTable("pontosColeta");
                });

            modelBuilder.Entity("e_saving.Models.Compra", b =>
                {
                    b.HasOne("e_saving.Models.Comprador", "Comprador")
                        .WithMany("Compras")
                        .HasForeignKey("CpnjComprador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_saving.Models.Estoque", "Estoque")
                        .WithMany("Compras")
                        .HasForeignKey("IdEstoque")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comprador");

                    b.Navigation("Estoque");
                });

            modelBuilder.Entity("e_saving.Models.ContaBanco", b =>
                {
                    b.HasOne("e_saving.Models.Comprador", "Comprador")
                        .WithMany("ContasBancos")
                        .HasForeignKey("CnpjComprador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_saving.Models.Cliente", "Cliente")
                        .WithMany("ContasBancos")
                        .HasForeignKey("CpfCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_saving.Models.Parceiro", "Parceiro")
                        .WithMany("ContasBancos")
                        .HasForeignKey("CpfParceiro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Comprador");

                    b.Navigation("Parceiro");
                });

            modelBuilder.Entity("e_saving.Models.Fornece", b =>
                {
                    b.HasOne("e_saving.Models.Cliente", "Cliente")
                        .WithMany("Fornecimentos")
                        .HasForeignKey("CpfCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_saving.Models.Item", "Item")
                        .WithMany("Fornecimentos")
                        .HasForeignKey("IdItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_saving.Models.PontoColeta", null)
                        .WithMany("Fornecimentos")
                        .HasForeignKey("PontoColetaIdPontoColeta");

                    b.Navigation("Cliente");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("e_saving.Models.Funcionario", b =>
                {
                    b.HasOne("e_saving.Models.Estoque", "Estoque")
                        .WithMany("Funcionarios")
                        .HasForeignKey("IdEstoque")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estoque");
                });

            modelBuilder.Entity("e_saving.Models.Item", b =>
                {
                    b.HasOne("e_saving.Models.Estoque", "Estoque")
                        .WithMany("Itens")
                        .HasForeignKey("IdEstoque")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_saving.Models.PontoColeta", "PontoColeta")
                        .WithMany("Itens")
                        .HasForeignKey("IdPontoColeta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estoque");

                    b.Navigation("PontoColeta");
                });

            modelBuilder.Entity("e_saving.Models.PontoColeta", b =>
                {
                    b.HasOne("e_saving.Models.Parceiro", "Parceiro")
                        .WithMany("PontosColeta")
                        .HasForeignKey("CpfParceiro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parceiro");
                });

            modelBuilder.Entity("e_saving.Models.Cliente", b =>
                {
                    b.Navigation("ContasBancos");

                    b.Navigation("Fornecimentos");
                });

            modelBuilder.Entity("e_saving.Models.Comprador", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("ContasBancos");
                });

            modelBuilder.Entity("e_saving.Models.Estoque", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("Funcionarios");

                    b.Navigation("Itens");
                });

            modelBuilder.Entity("e_saving.Models.Item", b =>
                {
                    b.Navigation("Fornecimentos");
                });

            modelBuilder.Entity("e_saving.Models.Parceiro", b =>
                {
                    b.Navigation("ContasBancos");

                    b.Navigation("PontosColeta");
                });

            modelBuilder.Entity("e_saving.Models.PontoColeta", b =>
                {
                    b.Navigation("Fornecimentos");

                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
